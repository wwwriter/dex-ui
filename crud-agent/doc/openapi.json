{"openapi":"3.1.0","info":{"title":"Api Documentation","version":"1.21.1"},"paths":{"/auth/login":{"post":{"description":"Takes a `username` and `password` and returns an `access_token` if successfully authenticated","summary":"Login","tags":["Authentication"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"username":{"type":"string"},"password":{"type":"string"}},"required":["username","password"]}}},"required":true},"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"access_token":"eyJ0...CiM","id":"1"}}},"schema":{"$ref":"#/components/schemas/AuthenticationTokenResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/link_types/":{"post":{"description":"Creates a new link_types","summary":"Create link_types","tags":["link_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"label":{"type":"string"},"description":{"type":"string"},"relationship_type":{"type":"One of: foreign-key, dataset"},"source_object_link_property":{"type":"string"},"target_object_link_property":{"type":"string"},"semantic_label":{"type":"string"},"created_at":{"type":"CURRENT_TIMESTAMP(6)"},"updated_at":{"type":"CURRENT_TIMESTAMP(6)"},"ontology_id":{"type":"number"},"source_object_type_id":{"type":"number"},"target_object_type_id":{"type":"number"}},"required":["id","name","relationship_type","source_object_link_property","target_object_link_property","semantic_label","created_at","updated_at"]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","label":"string","description":"string","relationship_type":"enum","source_object_link_property":"string","target_object_link_property":"string","semantic_label":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number","source_object_type_id":"number","target_object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/link_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"get":{"description":"Returns a list of link_types records","summary":"List link_types","tags":["link_types"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `object_types`, `object_types`, `ontologies`","type":"array","items":{"type":"string"}},"page":{"type":"string","description":"Used for pagination, pass the page result from a previous request"},"limit":{"type":"number","description":"The number of records to return"},"offset":{"type":"number","description":"The number of records to skip"},"sort":{"description":"The fields to sort by, expects a comma separated list of fields. Format is sort=`{column}.{direction},column.{direction}`","type":"string"},"id":{"description":"Filter by id, options are: `id=1`, `id[gt]=1`, `id[lt]=1`, `id[gte]=1`, `id[lte]=1`, `id[not_like]=value`, `id[not_in]=value`, `id[null]`, `id[not_null]`","type":"number"},"name":{"description":"Filter by name, options are: `name=value`, `name[search]=value`, `name[like]=value`,  `name[in]=value`, `name[null]`, `name[not_null]`","type":"string"},"label":{"description":"Filter by label, options are: `label=value`, `label[search]=value`, `label[like]=value`,  `label[in]=value`, `label[null]`, `label[not_null]`","type":"string"},"description":{"description":"Filter by description, options are: `description=value`, `description[search]=value`, `description[like]=value`,  `description[in]=value`, `description[null]`, `description[not_null]`","type":"string"},"relationship_type":{"description":"Filter by relationship_type, options are: `relationship_type=value`, `relationship_type[null]`, `relationship_type[not_null].`, `relationship_type[not_like]=value`, `relationship_type[not_in]=value`Enums are: `foreign-key`, `dataset`.","type":"enum"},"source_object_link_property":{"description":"Filter by source_object_link_property, options are: `source_object_link_property=value`, `source_object_link_property[search]=value`, `source_object_link_property[like]=value`,  `source_object_link_property[in]=value`, `source_object_link_property[null]`, `source_object_link_property[not_null]`","type":"string"},"target_object_link_property":{"description":"Filter by target_object_link_property, options are: `target_object_link_property=value`, `target_object_link_property[search]=value`, `target_object_link_property[like]=value`,  `target_object_link_property[in]=value`, `target_object_link_property[null]`, `target_object_link_property[not_null]`","type":"string"},"semantic_label":{"description":"Filter by semantic_label, options are: `semantic_label=value`, `semantic_label[search]=value`, `semantic_label[like]=value`,  `semantic_label[in]=value`, `semantic_label[null]`, `semantic_label[not_null]`","type":"string"},"created_at":{"description":"Filter by created_at, options are: ","type":"unknown"},"updated_at":{"description":"Filter by updated_at, options are: ","type":"unknown"},"ontology_id":{"description":"Filter by ontology_id, options are: `ontology_id=1`, `ontology_id[gt]=1`, `ontology_id[lt]=1`, `ontology_id[gte]=1`, `ontology_id[lte]=1`, `ontology_id[not_like]=value`, `ontology_id[not_in]=value`, `ontology_id[null]`, `ontology_id[not_null]`","type":"number"},"source_object_type_id":{"description":"Filter by source_object_type_id, options are: `source_object_type_id=1`, `source_object_type_id[gt]=1`, `source_object_type_id[lt]=1`, `source_object_type_id[gte]=1`, `source_object_type_id[lte]=1`, `source_object_type_id[not_like]=value`, `source_object_type_id[not_in]=value`, `source_object_type_id[null]`, `source_object_type_id[not_null]`","type":"number"},"target_object_type_id":{"description":"Filter by target_object_type_id, options are: `target_object_type_id=1`, `target_object_type_id[gt]=1`, `target_object_type_id[lt]=1`, `target_object_type_id[gte]=1`, `target_object_type_id[lte]=1`, `target_object_type_id[not_like]=value`, `target_object_type_id[not_in]=value`, `target_object_type_id[null]`, `target_object_type_id[not_null]`","type":"number"}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"limit":20,"offset":0,"total":70,"pagination":{"total":20,"page":{"current":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","prev":null,"next":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MjB9","first":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","last":"eyJsaW1pdCI6MjAsIm9mZnNldCI6NTB9"}},"data":[{"id":"number","name":"string","label":"string","description":"string","relationship_type":"enum","source_object_link_property":"string","target_object_link_property":"string","semantic_label":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number","source_object_type_id":"number","target_object_type_id":"number"}]}}},"schema":{"$ref":"#/components/schemas/Listlink_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/link_types/:id":{"get":{"description":"Returns a record of link_types","summary":"Get link_types","tags":["link_types"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `object_types`, `object_types`, `ontologies`","type":"array","items":{"type":"string"}}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","label":"string","description":"string","relationship_type":"enum","source_object_link_property":"string","target_object_link_property":"string","semantic_label":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number","source_object_type_id":"number","target_object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/link_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"put":{"description":"Updates a link_types record","summary":"Update link_types","tags":["link_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"label":{"type":"string"},"description":{"type":"string"},"relationship_type":{"type":"One of: foreign-key, dataset"},"source_object_link_property":{"type":"string"},"target_object_link_property":{"type":"string"},"semantic_label":{"type":"string"},"created_at":{"type":"CURRENT_TIMESTAMP(6)"},"updated_at":{"type":"CURRENT_TIMESTAMP(6)"},"ontology_id":{"type":"number"},"source_object_type_id":{"type":"number"},"target_object_type_id":{"type":"number"}},"required":[]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","label":"string","description":"string","relationship_type":"enum","source_object_link_property":"string","target_object_link_property":"string","semantic_label":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number","source_object_type_id":"number","target_object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/link_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"delete":{"description":"Deletes a record of link_types","summary":"Delete link_types","tags":["link_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"deleted":1}}},"schema":{"$ref":"#/components/schemas/link_typesDeleteResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/link_types/schema":{"get":{"description":"Returns the table schema for link_types","summary":"Schema","tags":["link_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"table":"link_types","columns":[{"field":"id","type":"number","nullable":false,"required":true,"primary_key":true,"unique_key":false,"foreign_key":false,"default":null,"extra":"auto_increment"},{"field":"name","type":"string","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"label","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"description","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"relationship_type","type":"enum","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":"","enums":["foreign-key","dataset"]},{"field":"source_object_link_property","type":"string","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"target_object_link_property","type":"string","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"semantic_label","type":"string","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"created_at","type":"unknown","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"CURRENT_TIMESTAMP(6)","extra":"DEFAULT_GENERATED"},{"field":"updated_at","type":"unknown","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"CURRENT_TIMESTAMP(6)","extra":"DEFAULT_GENERATED on update CURRENT_TIMESTAMP(6)"},{"field":"ontology_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""},{"field":"source_object_type_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""},{"field":"target_object_type_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""}],"primary_key":"id","relations":[{"table":"object_types","column":"id","org_table":"link_types","org_column":"source_object_type_id"},{"table":"object_types","column":"id","org_table":"link_types","org_column":"target_object_type_id"},{"table":"ontologies","column":"id","org_table":"link_types","org_column":"ontology_id"}]}}},"schema":{"$ref":"#/components/schemas/SchemaResponse"}}},"description":"Success"},"401":{"description":"Unauthorized"}}}},"/measure_types/":{"post":{"description":"Creates a new measure_types","summary":"Create measure_types","tags":["measure_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"measure_type":{"type":"One of: count, sum, average, min, max, count_distinct, custom"},"measure_type_params":{"type":"json"},"ontology_id":{"type":"number"},"object_type_id":{"type":"number"}},"required":["id","name","measure_type"]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","description":"string","measure_type":"count","measure_type_params":"json","ontology_id":"number","object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/measure_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"get":{"description":"Returns a list of measure_types records","summary":"List measure_types","tags":["measure_types"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `metrics`, `ontologies`, `object_types`","type":"array","items":{"type":"string"}},"page":{"type":"string","description":"Used for pagination, pass the page result from a previous request"},"limit":{"type":"number","description":"The number of records to return"},"offset":{"type":"number","description":"The number of records to skip"},"sort":{"description":"The fields to sort by, expects a comma separated list of fields. Format is sort=`{column}.{direction},column.{direction}`","type":"string"},"id":{"description":"Filter by id, options are: `id=1`, `id[gt]=1`, `id[lt]=1`, `id[gte]=1`, `id[lte]=1`, `id[not_like]=value`, `id[not_in]=value`, `id[null]`, `id[not_null]`","type":"number"},"name":{"description":"Filter by name, options are: `name=value`, `name[search]=value`, `name[like]=value`,  `name[in]=value`, `name[null]`, `name[not_null]`","type":"string"},"description":{"description":"Filter by description, options are: `description=value`, `description[search]=value`, `description[like]=value`,  `description[in]=value`, `description[null]`, `description[not_null]`","type":"string"},"measure_type":{"description":"Filter by measure_type, options are: `measure_type=value`, `measure_type[null]`, `measure_type[not_null].`, `measure_type[not_like]=value`, `measure_type[not_in]=value`Enums are: `count`, `sum`, `average`, `min`, `max`, `count_distinct`, `custom`.","type":"enum"},"measure_type_params":{"description":"Filter by measure_type_params, options are: ","type":"json"},"ontology_id":{"description":"Filter by ontology_id, options are: `ontology_id=1`, `ontology_id[gt]=1`, `ontology_id[lt]=1`, `ontology_id[gte]=1`, `ontology_id[lte]=1`, `ontology_id[not_like]=value`, `ontology_id[not_in]=value`, `ontology_id[null]`, `ontology_id[not_null]`","type":"number"},"object_type_id":{"description":"Filter by object_type_id, options are: `object_type_id=1`, `object_type_id[gt]=1`, `object_type_id[lt]=1`, `object_type_id[gte]=1`, `object_type_id[lte]=1`, `object_type_id[not_like]=value`, `object_type_id[not_in]=value`, `object_type_id[null]`, `object_type_id[not_null]`","type":"number"}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"limit":20,"offset":0,"total":70,"pagination":{"total":20,"page":{"current":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","prev":null,"next":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MjB9","first":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","last":"eyJsaW1pdCI6MjAsIm9mZnNldCI6NTB9"}},"data":[{"id":"number","name":"string","description":"string","measure_type":"count","measure_type_params":"json","ontology_id":"number","object_type_id":"number"}]}}},"schema":{"$ref":"#/components/schemas/Listmeasure_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/measure_types/:id":{"get":{"description":"Returns a record of measure_types","summary":"Get measure_types","tags":["measure_types"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `metrics`, `ontologies`, `object_types`","type":"array","items":{"type":"string"}}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","description":"string","measure_type":"count","measure_type_params":"json","ontology_id":"number","object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/measure_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"put":{"description":"Updates a measure_types record","summary":"Update measure_types","tags":["measure_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"measure_type":{"type":"One of: count, sum, average, min, max, count_distinct, custom"},"measure_type_params":{"type":"json"},"ontology_id":{"type":"number"},"object_type_id":{"type":"number"}},"required":[]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","description":"string","measure_type":"count","measure_type_params":"json","ontology_id":"number","object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/measure_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"delete":{"description":"Deletes a record of measure_types","summary":"Delete measure_types","tags":["measure_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"deleted":1}}},"schema":{"$ref":"#/components/schemas/measure_typesDeleteResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/measure_types/schema":{"get":{"description":"Returns the table schema for measure_types","summary":"Schema","tags":["measure_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"table":"measure_types","columns":[{"field":"id","type":"number","nullable":false,"required":true,"primary_key":true,"unique_key":false,"foreign_key":false,"default":null,"extra":"auto_increment"},{"field":"name","type":"string","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"description","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"measure_type","type":"enum","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"count","extra":"","enums":["count","sum","average","min","max","count_distinct","custom"]},{"field":"measure_type_params","type":"json","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"ontology_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""},{"field":"object_type_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""}],"primary_key":"id","relations":[{"table":"metrics","column":"measure_type_id","org_table":"measure_types","org_column":"id"},{"table":"ontologies","column":"id","org_table":"measure_types","org_column":"ontology_id"},{"table":"object_types","column":"id","org_table":"measure_types","org_column":"object_type_id"}]}}},"schema":{"$ref":"#/components/schemas/SchemaResponse"}}},"description":"Success"},"401":{"description":"Unauthorized"}}}},"/metric_relation/":{"post":{"description":"Creates a new metric_relation","summary":"Create metric_relation","tags":["metric_relation"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"object_type_id":{"type":"number"}},"required":["metric_id"]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"metric_id":"number","object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/metric_relationResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"get":{"description":"Returns a list of metric_relations records","summary":"List metric_relations","tags":["metric_relation"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `object_types`, `metrics`","type":"array","items":{"type":"string"}},"page":{"type":"string","description":"Used for pagination, pass the page result from a previous request"},"limit":{"type":"number","description":"The number of records to return"},"offset":{"type":"number","description":"The number of records to skip"},"sort":{"description":"The fields to sort by, expects a comma separated list of fields. Format is sort=`{column}.{direction},column.{direction}`","type":"string"},"metric_id":{"description":"Filter by metric_id, options are: `metric_id=1`, `metric_id[gt]=1`, `metric_id[lt]=1`, `metric_id[gte]=1`, `metric_id[lte]=1`, `metric_id[not_like]=value`, `metric_id[not_in]=value`, `metric_id[null]`, `metric_id[not_null]`","type":"number"},"object_type_id":{"description":"Filter by object_type_id, options are: `object_type_id=1`, `object_type_id[gt]=1`, `object_type_id[lt]=1`, `object_type_id[gte]=1`, `object_type_id[lte]=1`, `object_type_id[not_like]=value`, `object_type_id[not_in]=value`, `object_type_id[null]`, `object_type_id[not_null]`","type":"number"}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"limit":20,"offset":0,"total":70,"pagination":{"total":20,"page":{"current":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","prev":null,"next":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MjB9","first":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","last":"eyJsaW1pdCI6MjAsIm9mZnNldCI6NTB9"}},"data":[{"metric_id":"number","object_type_id":"number"}]}}},"schema":{"$ref":"#/components/schemas/Listmetric_relationResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/metric_relation/:id":{"get":{"description":"Returns a record of metric_relation","summary":"Get metric_relation","tags":["metric_relation"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `object_types`, `metrics`","type":"array","items":{"type":"string"}}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"metric_id":"number","object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/metric_relationResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"put":{"description":"Updates a metric_relation record","summary":"Update metric_relation","tags":["metric_relation"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"object_type_id":{"type":"number"}},"required":[]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"metric_id":"number","object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/metric_relationResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"delete":{"description":"Deletes a record of metric_relation","summary":"Delete metric_relation","tags":["metric_relation"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"deleted":1}}},"schema":{"$ref":"#/components/schemas/metric_relationDeleteResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/metric_relation/schema":{"get":{"description":"Returns the table schema for metric_relation","summary":"Schema","tags":["metric_relation"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"table":"metric_relation","columns":[{"field":"metric_id","type":"number","nullable":false,"required":true,"primary_key":true,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"object_type_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""}],"primary_key":"metric_id","relations":[{"table":"object_types","column":"id","org_table":"metric_relation","org_column":"object_type_id"},{"table":"metrics","column":"id","org_table":"metric_relation","org_column":"metric_id"}]}}},"schema":{"$ref":"#/components/schemas/SchemaResponse"}}},"description":"Success"},"401":{"description":"Unauthorized"}}}},"/metrics/":{"post":{"description":"Creates a new metrics","summary":"Create metrics","tags":["metrics"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"object_type_id":{"type":"number"},"name":{"type":"string"},"label":{"type":"string"},"description":{"type":"string"},"is_main_metric":{"type":"0"},"type":{"type":"One of: simple, derived, cumulative, ratio, conversion"},"type_params":{"type":"json"},"filter":{"type":"string"},"dimension":{"type":"json"},"children":{"type":"json"},"created_at":{"type":"CURRENT_TIMESTAMP(6)"},"updated_at":{"type":"CURRENT_TIMESTAMP(6)"},"ontology_id":{"type":"number"},"measure_type_id":{"type":"number"}},"required":["id","name","is_main_metric","type","type_params","created_at","updated_at"]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","object_type_id":"number","name":"string","label":"string","description":"string","is_main_metric":"0","type":"enum","type_params":"json","filter":"string","dimension":"json","children":"json","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number","measure_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/metricsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"get":{"description":"Returns a list of metrics records","summary":"List metrics","tags":["metrics"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `metric_relation`, `problem_metrics`, `object_types`, `ontologies`, `measure_types`","type":"array","items":{"type":"string"}},"page":{"type":"string","description":"Used for pagination, pass the page result from a previous request"},"limit":{"type":"number","description":"The number of records to return"},"offset":{"type":"number","description":"The number of records to skip"},"sort":{"description":"The fields to sort by, expects a comma separated list of fields. Format is sort=`{column}.{direction},column.{direction}`","type":"string"},"id":{"description":"Filter by id, options are: `id=1`, `id[gt]=1`, `id[lt]=1`, `id[gte]=1`, `id[lte]=1`, `id[not_like]=value`, `id[not_in]=value`, `id[null]`, `id[not_null]`","type":"number"},"object_type_id":{"description":"Filter by object_type_id, options are: `object_type_id=1`, `object_type_id[gt]=1`, `object_type_id[lt]=1`, `object_type_id[gte]=1`, `object_type_id[lte]=1`, `object_type_id[not_like]=value`, `object_type_id[not_in]=value`, `object_type_id[null]`, `object_type_id[not_null]`","type":"number"},"name":{"description":"Filter by name, options are: `name=value`, `name[search]=value`, `name[like]=value`,  `name[in]=value`, `name[null]`, `name[not_null]`","type":"string"},"label":{"description":"Filter by label, options are: `label=value`, `label[search]=value`, `label[like]=value`,  `label[in]=value`, `label[null]`, `label[not_null]`","type":"string"},"description":{"description":"Filter by description, options are: `description=value`, `description[search]=value`, `description[like]=value`,  `description[in]=value`, `description[null]`, `description[not_null]`","type":"string"},"is_main_metric":{"description":"Filter by is_main_metric, options are: `is_main_metric=1`, `is_main_metric[gt]=1`, `is_main_metric[lt]=1`, `is_main_metric[gte]=1`, `is_main_metric[lte]=1`, `is_main_metric[not_like]=value`, `is_main_metric[not_in]=value`, `is_main_metric[null]`, `is_main_metric[not_null]`","type":"number"},"type":{"description":"Filter by type, options are: `type=value`, `type[null]`, `type[not_null].`, `type[not_like]=value`, `type[not_in]=value`Enums are: `simple`, `derived`, `cumulative`, `ratio`, `conversion`.","type":"enum"},"type_params":{"description":"Filter by type_params, options are: ","type":"json"},"filter":{"description":"Filter by filter, options are: `filter=value`, `filter[search]=value`, `filter[like]=value`,  `filter[in]=value`, `filter[null]`, `filter[not_null]`","type":"string"},"dimension":{"description":"Filter by dimension, options are: ","type":"json"},"children":{"description":"Filter by children, options are: ","type":"json"},"created_at":{"description":"Filter by created_at, options are: ","type":"unknown"},"updated_at":{"description":"Filter by updated_at, options are: ","type":"unknown"},"ontology_id":{"description":"Filter by ontology_id, options are: `ontology_id=1`, `ontology_id[gt]=1`, `ontology_id[lt]=1`, `ontology_id[gte]=1`, `ontology_id[lte]=1`, `ontology_id[not_like]=value`, `ontology_id[not_in]=value`, `ontology_id[null]`, `ontology_id[not_null]`","type":"number"},"measure_type_id":{"description":"Filter by measure_type_id, options are: `measure_type_id=1`, `measure_type_id[gt]=1`, `measure_type_id[lt]=1`, `measure_type_id[gte]=1`, `measure_type_id[lte]=1`, `measure_type_id[not_like]=value`, `measure_type_id[not_in]=value`, `measure_type_id[null]`, `measure_type_id[not_null]`","type":"number"}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"limit":20,"offset":0,"total":70,"pagination":{"total":20,"page":{"current":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","prev":null,"next":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MjB9","first":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","last":"eyJsaW1pdCI6MjAsIm9mZnNldCI6NTB9"}},"data":[{"id":"number","object_type_id":"number","name":"string","label":"string","description":"string","is_main_metric":"0","type":"enum","type_params":"json","filter":"string","dimension":"json","children":"json","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number","measure_type_id":"number"}]}}},"schema":{"$ref":"#/components/schemas/ListmetricsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/metrics/:id":{"get":{"description":"Returns a record of metrics","summary":"Get metrics","tags":["metrics"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `metric_relation`, `problem_metrics`, `object_types`, `ontologies`, `measure_types`","type":"array","items":{"type":"string"}}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","object_type_id":"number","name":"string","label":"string","description":"string","is_main_metric":"0","type":"enum","type_params":"json","filter":"string","dimension":"json","children":"json","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number","measure_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/metricsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"put":{"description":"Updates a metrics record","summary":"Update metrics","tags":["metrics"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"object_type_id":{"type":"number"},"name":{"type":"string"},"label":{"type":"string"},"description":{"type":"string"},"is_main_metric":{"type":"0"},"type":{"type":"One of: simple, derived, cumulative, ratio, conversion"},"type_params":{"type":"json"},"filter":{"type":"string"},"dimension":{"type":"json"},"children":{"type":"json"},"created_at":{"type":"CURRENT_TIMESTAMP(6)"},"updated_at":{"type":"CURRENT_TIMESTAMP(6)"},"ontology_id":{"type":"number"},"measure_type_id":{"type":"number"}},"required":[]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","object_type_id":"number","name":"string","label":"string","description":"string","is_main_metric":"0","type":"enum","type_params":"json","filter":"string","dimension":"json","children":"json","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number","measure_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/metricsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"delete":{"description":"Deletes a record of metrics","summary":"Delete metrics","tags":["metrics"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"deleted":1}}},"schema":{"$ref":"#/components/schemas/metricsDeleteResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/metrics/schema":{"get":{"description":"Returns the table schema for metrics","summary":"Schema","tags":["metrics"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"table":"metrics","columns":[{"field":"id","type":"number","nullable":false,"required":true,"primary_key":true,"unique_key":false,"foreign_key":false,"default":null,"extra":"auto_increment"},{"field":"object_type_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""},{"field":"name","type":"string","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"label","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"description","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"is_main_metric","type":"number","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"0","extra":""},{"field":"type","type":"enum","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":"","enums":["simple","derived","cumulative","ratio","conversion"]},{"field":"type_params","type":"json","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"filter","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"dimension","type":"json","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"children","type":"json","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"created_at","type":"unknown","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"CURRENT_TIMESTAMP(6)","extra":"DEFAULT_GENERATED"},{"field":"updated_at","type":"unknown","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"CURRENT_TIMESTAMP(6)","extra":"DEFAULT_GENERATED on update CURRENT_TIMESTAMP(6)"},{"field":"ontology_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""},{"field":"measure_type_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""}],"primary_key":"id","relations":[{"table":"metric_relation","column":"metric_id","org_table":"metrics","org_column":"id"},{"table":"problem_metrics","column":"metric_id","org_table":"metrics","org_column":"id"},{"table":"object_types","column":"id","org_table":"metrics","org_column":"object_type_id"},{"table":"ontologies","column":"id","org_table":"metrics","org_column":"ontology_id"},{"table":"measure_types","column":"id","org_table":"metrics","org_column":"measure_type_id"}]}}},"schema":{"$ref":"#/components/schemas/SchemaResponse"}}},"description":"Success"},"401":{"description":"Unauthorized"}}}},"/object_types/":{"post":{"description":"Creates a new object_types","summary":"Create object_types","tags":["object_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"label":{"type":"string"},"description":{"type":"string"},"created_at":{"type":"CURRENT_TIMESTAMP(6)"},"updated_at":{"type":"CURRENT_TIMESTAMP(6)"},"ontology_id":{"type":"number"}},"required":["id","name","created_at","updated_at"]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","label":"string","description":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number"}}},"schema":{"$ref":"#/components/schemas/object_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"get":{"description":"Returns a list of object_types records","summary":"List object_types","tags":["object_types"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `link_types`, `link_types`, `measure_types`, `metric_relation`, `metrics`, `properties`, `ontologies`","type":"array","items":{"type":"string"}},"page":{"type":"string","description":"Used for pagination, pass the page result from a previous request"},"limit":{"type":"number","description":"The number of records to return"},"offset":{"type":"number","description":"The number of records to skip"},"sort":{"description":"The fields to sort by, expects a comma separated list of fields. Format is sort=`{column}.{direction},column.{direction}`","type":"string"},"id":{"description":"Filter by id, options are: `id=1`, `id[gt]=1`, `id[lt]=1`, `id[gte]=1`, `id[lte]=1`, `id[not_like]=value`, `id[not_in]=value`, `id[null]`, `id[not_null]`","type":"number"},"name":{"description":"Filter by name, options are: `name=value`, `name[search]=value`, `name[like]=value`,  `name[in]=value`, `name[null]`, `name[not_null]`","type":"string"},"label":{"description":"Filter by label, options are: `label=value`, `label[search]=value`, `label[like]=value`,  `label[in]=value`, `label[null]`, `label[not_null]`","type":"string"},"description":{"description":"Filter by description, options are: `description=value`, `description[search]=value`, `description[like]=value`,  `description[in]=value`, `description[null]`, `description[not_null]`","type":"string"},"created_at":{"description":"Filter by created_at, options are: ","type":"unknown"},"updated_at":{"description":"Filter by updated_at, options are: ","type":"unknown"},"ontology_id":{"description":"Filter by ontology_id, options are: `ontology_id=1`, `ontology_id[gt]=1`, `ontology_id[lt]=1`, `ontology_id[gte]=1`, `ontology_id[lte]=1`, `ontology_id[not_like]=value`, `ontology_id[not_in]=value`, `ontology_id[null]`, `ontology_id[not_null]`","type":"number"}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"limit":20,"offset":0,"total":70,"pagination":{"total":20,"page":{"current":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","prev":null,"next":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MjB9","first":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","last":"eyJsaW1pdCI6MjAsIm9mZnNldCI6NTB9"}},"data":[{"id":"number","name":"string","label":"string","description":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number"}]}}},"schema":{"$ref":"#/components/schemas/Listobject_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/object_types/:id":{"get":{"description":"Returns a record of object_types","summary":"Get object_types","tags":["object_types"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `link_types`, `link_types`, `measure_types`, `metric_relation`, `metrics`, `properties`, `ontologies`","type":"array","items":{"type":"string"}}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","label":"string","description":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number"}}},"schema":{"$ref":"#/components/schemas/object_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"put":{"description":"Updates a object_types record","summary":"Update object_types","tags":["object_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"label":{"type":"string"},"description":{"type":"string"},"created_at":{"type":"CURRENT_TIMESTAMP(6)"},"updated_at":{"type":"CURRENT_TIMESTAMP(6)"},"ontology_id":{"type":"number"}},"required":[]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","label":"string","description":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)","ontology_id":"number"}}},"schema":{"$ref":"#/components/schemas/object_typesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"delete":{"description":"Deletes a record of object_types","summary":"Delete object_types","tags":["object_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"deleted":1}}},"schema":{"$ref":"#/components/schemas/object_typesDeleteResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/object_types/schema":{"get":{"description":"Returns the table schema for object_types","summary":"Schema","tags":["object_types"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"table":"object_types","columns":[{"field":"id","type":"number","nullable":false,"required":true,"primary_key":true,"unique_key":false,"foreign_key":false,"default":null,"extra":"auto_increment"},{"field":"name","type":"string","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"label","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"description","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"created_at","type":"unknown","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"CURRENT_TIMESTAMP(6)","extra":"DEFAULT_GENERATED"},{"field":"updated_at","type":"unknown","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"CURRENT_TIMESTAMP(6)","extra":"DEFAULT_GENERATED on update CURRENT_TIMESTAMP(6)"},{"field":"ontology_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""}],"primary_key":"id","relations":[{"table":"link_types","column":"source_object_type_id","org_table":"object_types","org_column":"id"},{"table":"link_types","column":"target_object_type_id","org_table":"object_types","org_column":"id"},{"table":"measure_types","column":"object_type_id","org_table":"object_types","org_column":"id"},{"table":"metric_relation","column":"object_type_id","org_table":"object_types","org_column":"id"},{"table":"metrics","column":"object_type_id","org_table":"object_types","org_column":"id"},{"table":"properties","column":"object_type_id","org_table":"object_types","org_column":"id"},{"table":"ontologies","column":"id","org_table":"object_types","org_column":"ontology_id"}]}}},"schema":{"$ref":"#/components/schemas/SchemaResponse"}}},"description":"Success"},"401":{"description":"Unauthorized"}}}},"/ontologies/":{"post":{"description":"Creates a new ontologies","summary":"Create ontologies","tags":["ontologies"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"created_at":{"type":"CURRENT_TIMESTAMP(6)"},"updated_at":{"type":"CURRENT_TIMESTAMP(6)"}},"required":["id","name","created_at","updated_at"]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","description":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)"}}},"schema":{"$ref":"#/components/schemas/ontologiesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"get":{"description":"Returns a list of ontologies records","summary":"List ontologies","tags":["ontologies"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `link_types`, `measure_types`, `metrics`, `object_types`, `problems`, `properties`","type":"array","items":{"type":"string"}},"page":{"type":"string","description":"Used for pagination, pass the page result from a previous request"},"limit":{"type":"number","description":"The number of records to return"},"offset":{"type":"number","description":"The number of records to skip"},"sort":{"description":"The fields to sort by, expects a comma separated list of fields. Format is sort=`{column}.{direction},column.{direction}`","type":"string"},"id":{"description":"Filter by id, options are: `id=1`, `id[gt]=1`, `id[lt]=1`, `id[gte]=1`, `id[lte]=1`, `id[not_like]=value`, `id[not_in]=value`, `id[null]`, `id[not_null]`","type":"number"},"name":{"description":"Filter by name, options are: `name=value`, `name[search]=value`, `name[like]=value`,  `name[in]=value`, `name[null]`, `name[not_null]`","type":"string"},"description":{"description":"Filter by description, options are: `description=value`, `description[search]=value`, `description[like]=value`,  `description[in]=value`, `description[null]`, `description[not_null]`","type":"string"},"created_at":{"description":"Filter by created_at, options are: ","type":"unknown"},"updated_at":{"description":"Filter by updated_at, options are: ","type":"unknown"}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"limit":20,"offset":0,"total":70,"pagination":{"total":20,"page":{"current":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","prev":null,"next":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MjB9","first":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","last":"eyJsaW1pdCI6MjAsIm9mZnNldCI6NTB9"}},"data":[{"id":"number","name":"string","description":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)"}]}}},"schema":{"$ref":"#/components/schemas/ListontologiesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/ontologies/:id":{"get":{"description":"Returns a record of ontologies","summary":"Get ontologies","tags":["ontologies"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `link_types`, `measure_types`, `metrics`, `object_types`, `problems`, `properties`","type":"array","items":{"type":"string"}}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","description":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)"}}},"schema":{"$ref":"#/components/schemas/ontologiesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"put":{"description":"Updates a ontologies record","summary":"Update ontologies","tags":["ontologies"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"created_at":{"type":"CURRENT_TIMESTAMP(6)"},"updated_at":{"type":"CURRENT_TIMESTAMP(6)"}},"required":[]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","description":"string","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)"}}},"schema":{"$ref":"#/components/schemas/ontologiesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"delete":{"description":"Deletes a record of ontologies","summary":"Delete ontologies","tags":["ontologies"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"deleted":1}}},"schema":{"$ref":"#/components/schemas/ontologiesDeleteResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/ontologies/schema":{"get":{"description":"Returns the table schema for ontologies","summary":"Schema","tags":["ontologies"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"table":"ontologies","columns":[{"field":"id","type":"number","nullable":false,"required":true,"primary_key":true,"unique_key":false,"foreign_key":false,"default":null,"extra":"auto_increment"},{"field":"name","type":"string","nullable":false,"required":true,"primary_key":false,"unique_key":true,"foreign_key":false,"default":null,"extra":""},{"field":"description","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"created_at","type":"unknown","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"CURRENT_TIMESTAMP(6)","extra":"DEFAULT_GENERATED"},{"field":"updated_at","type":"unknown","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"CURRENT_TIMESTAMP(6)","extra":"DEFAULT_GENERATED on update CURRENT_TIMESTAMP(6)"}],"primary_key":"id","relations":[{"table":"link_types","column":"ontology_id","org_table":"ontologies","org_column":"id"},{"table":"measure_types","column":"ontology_id","org_table":"ontologies","org_column":"id"},{"table":"metrics","column":"ontology_id","org_table":"ontologies","org_column":"id"},{"table":"object_types","column":"ontology_id","org_table":"ontologies","org_column":"id"},{"table":"problems","column":"ontology_id","org_table":"ontologies","org_column":"id"},{"table":"properties","column":"ontology_id","org_table":"ontologies","org_column":"id"}]}}},"schema":{"$ref":"#/components/schemas/SchemaResponse"}}},"description":"Success"},"401":{"description":"Unauthorized"}}}},"/problem_metrics/":{"post":{"description":"Creates a new problem_metrics","summary":"Create problem_metrics","tags":["problem_metrics"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"metric_id":{"type":"number"}},"required":["problem_id","metric_id"]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"problem_id":"number","metric_id":"number"}}},"schema":{"$ref":"#/components/schemas/problem_metricsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"get":{"description":"Returns a list of problem_metrics records","summary":"List problem_metrics","tags":["problem_metrics"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `metrics`, `problems`","type":"array","items":{"type":"string"}},"page":{"type":"string","description":"Used for pagination, pass the page result from a previous request"},"limit":{"type":"number","description":"The number of records to return"},"offset":{"type":"number","description":"The number of records to skip"},"sort":{"description":"The fields to sort by, expects a comma separated list of fields. Format is sort=`{column}.{direction},column.{direction}`","type":"string"},"problem_id":{"description":"Filter by problem_id, options are: `problem_id=1`, `problem_id[gt]=1`, `problem_id[lt]=1`, `problem_id[gte]=1`, `problem_id[lte]=1`, `problem_id[not_like]=value`, `problem_id[not_in]=value`, `problem_id[null]`, `problem_id[not_null]`","type":"number"},"metric_id":{"description":"Filter by metric_id, options are: `metric_id=1`, `metric_id[gt]=1`, `metric_id[lt]=1`, `metric_id[gte]=1`, `metric_id[lte]=1`, `metric_id[not_like]=value`, `metric_id[not_in]=value`, `metric_id[null]`, `metric_id[not_null]`","type":"number"}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"limit":20,"offset":0,"total":70,"pagination":{"total":20,"page":{"current":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","prev":null,"next":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MjB9","first":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","last":"eyJsaW1pdCI6MjAsIm9mZnNldCI6NTB9"}},"data":[{"problem_id":"number","metric_id":"number"}]}}},"schema":{"$ref":"#/components/schemas/Listproblem_metricsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/problem_metrics/:id":{"get":{"description":"Returns a record of problem_metrics","summary":"Get problem_metrics","tags":["problem_metrics"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `metrics`, `problems`","type":"array","items":{"type":"string"}}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"problem_id":"number","metric_id":"number"}}},"schema":{"$ref":"#/components/schemas/problem_metricsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"put":{"description":"Updates a problem_metrics record","summary":"Update problem_metrics","tags":["problem_metrics"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"metric_id":{"type":"number"}},"required":[]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"problem_id":"number","metric_id":"number"}}},"schema":{"$ref":"#/components/schemas/problem_metricsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"delete":{"description":"Deletes a record of problem_metrics","summary":"Delete problem_metrics","tags":["problem_metrics"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"deleted":1}}},"schema":{"$ref":"#/components/schemas/problem_metricsDeleteResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/problem_metrics/schema":{"get":{"description":"Returns the table schema for problem_metrics","summary":"Schema","tags":["problem_metrics"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"table":"problem_metrics","columns":[{"field":"problem_id","type":"number","nullable":false,"required":true,"primary_key":true,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"metric_id","type":"number","nullable":false,"required":true,"primary_key":true,"unique_key":false,"foreign_key":false,"default":null,"extra":""}],"primary_key":"problem_id","relations":[{"table":"metrics","column":"id","org_table":"problem_metrics","org_column":"metric_id"},{"table":"problems","column":"id","org_table":"problem_metrics","org_column":"problem_id"}]}}},"schema":{"$ref":"#/components/schemas/SchemaResponse"}}},"description":"Success"},"401":{"description":"Unauthorized"}}}},"/problems/":{"post":{"description":"Creates a new problems","summary":"Create problems","tags":["problems"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"label":{"type":"string"},"description":{"type":"string"},"type":{"type":"One of: occurred, exploratory, reframing"},"hypotheses":{"type":"json"},"ontology_id":{"type":"number"},"created_at":{"type":"CURRENT_TIMESTAMP(6)"},"updated_at":{"type":"CURRENT_TIMESTAMP(6)"}},"required":["id","name","type","hypotheses","created_at","updated_at"]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","label":"string","description":"string","type":"enum","hypotheses":"json","ontology_id":"number","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)"}}},"schema":{"$ref":"#/components/schemas/problemsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"get":{"description":"Returns a list of problems records","summary":"List problems","tags":["problems"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `problem_metrics`, `ontologies`","type":"array","items":{"type":"string"}},"page":{"type":"string","description":"Used for pagination, pass the page result from a previous request"},"limit":{"type":"number","description":"The number of records to return"},"offset":{"type":"number","description":"The number of records to skip"},"sort":{"description":"The fields to sort by, expects a comma separated list of fields. Format is sort=`{column}.{direction},column.{direction}`","type":"string"},"id":{"description":"Filter by id, options are: `id=1`, `id[gt]=1`, `id[lt]=1`, `id[gte]=1`, `id[lte]=1`, `id[not_like]=value`, `id[not_in]=value`, `id[null]`, `id[not_null]`","type":"number"},"name":{"description":"Filter by name, options are: `name=value`, `name[search]=value`, `name[like]=value`,  `name[in]=value`, `name[null]`, `name[not_null]`","type":"string"},"label":{"description":"Filter by label, options are: `label=value`, `label[search]=value`, `label[like]=value`,  `label[in]=value`, `label[null]`, `label[not_null]`","type":"string"},"description":{"description":"Filter by description, options are: `description=value`, `description[search]=value`, `description[like]=value`,  `description[in]=value`, `description[null]`, `description[not_null]`","type":"string"},"type":{"description":"Filter by type, options are: `type=value`, `type[null]`, `type[not_null].`, `type[not_like]=value`, `type[not_in]=value`Enums are: `occurred`, `exploratory`, `reframing`.","type":"enum"},"hypotheses":{"description":"Filter by hypotheses, options are: ","type":"json"},"ontology_id":{"description":"Filter by ontology_id, options are: `ontology_id=1`, `ontology_id[gt]=1`, `ontology_id[lt]=1`, `ontology_id[gte]=1`, `ontology_id[lte]=1`, `ontology_id[not_like]=value`, `ontology_id[not_in]=value`, `ontology_id[null]`, `ontology_id[not_null]`","type":"number"},"created_at":{"description":"Filter by created_at, options are: ","type":"unknown"},"updated_at":{"description":"Filter by updated_at, options are: ","type":"unknown"}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"limit":20,"offset":0,"total":70,"pagination":{"total":20,"page":{"current":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","prev":null,"next":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MjB9","first":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","last":"eyJsaW1pdCI6MjAsIm9mZnNldCI6NTB9"}},"data":[{"id":"number","name":"string","label":"string","description":"string","type":"enum","hypotheses":"json","ontology_id":"number","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)"}]}}},"schema":{"$ref":"#/components/schemas/ListproblemsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/problems/:id":{"get":{"description":"Returns a record of problems","summary":"Get problems","tags":["problems"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `problem_metrics`, `ontologies`","type":"array","items":{"type":"string"}}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","label":"string","description":"string","type":"enum","hypotheses":"json","ontology_id":"number","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)"}}},"schema":{"$ref":"#/components/schemas/problemsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"put":{"description":"Updates a problems record","summary":"Update problems","tags":["problems"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"label":{"type":"string"},"description":{"type":"string"},"type":{"type":"One of: occurred, exploratory, reframing"},"hypotheses":{"type":"json"},"ontology_id":{"type":"number"},"created_at":{"type":"CURRENT_TIMESTAMP(6)"},"updated_at":{"type":"CURRENT_TIMESTAMP(6)"}},"required":[]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","label":"string","description":"string","type":"enum","hypotheses":"json","ontology_id":"number","created_at":"CURRENT_TIMESTAMP(6)","updated_at":"CURRENT_TIMESTAMP(6)"}}},"schema":{"$ref":"#/components/schemas/problemsResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"delete":{"description":"Deletes a record of problems","summary":"Delete problems","tags":["problems"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"deleted":1}}},"schema":{"$ref":"#/components/schemas/problemsDeleteResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/problems/schema":{"get":{"description":"Returns the table schema for problems","summary":"Schema","tags":["problems"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"table":"problems","columns":[{"field":"id","type":"number","nullable":false,"required":true,"primary_key":true,"unique_key":false,"foreign_key":false,"default":null,"extra":"auto_increment"},{"field":"name","type":"string","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"label","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"description","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"type","type":"enum","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":"","enums":["occurred","exploratory","reframing"]},{"field":"hypotheses","type":"json","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"ontology_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""},{"field":"created_at","type":"unknown","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"CURRENT_TIMESTAMP(6)","extra":"DEFAULT_GENERATED"},{"field":"updated_at","type":"unknown","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"CURRENT_TIMESTAMP(6)","extra":"DEFAULT_GENERATED on update CURRENT_TIMESTAMP(6)"}],"primary_key":"id","relations":[{"table":"problem_metrics","column":"problem_id","org_table":"problems","org_column":"id"},{"table":"ontologies","column":"id","org_table":"problems","org_column":"ontology_id"}]}}},"schema":{"$ref":"#/components/schemas/SchemaResponse"}}},"description":"Success"},"401":{"description":"Unauthorized"}}}},"/properties/":{"post":{"description":"Creates a new properties","summary":"Create properties","tags":["properties"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"data_type":{"type":"One of: string, number, boolean, date, timestamp"},"dimension_type":{"type":"One of: time, categorical"},"dimension_type_params":{"type":"json"},"dimension_context":{"type":"string"},"entity_type":{"type":"One of: primary, foreign, unique, natural"},"is_required":{"type":"0"},"ontology_id":{"type":"number"},"object_type_id":{"type":"number"}},"required":["id","name","data_type","is_required"]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","description":"string","data_type":"enum","dimension_type":"enum","dimension_type_params":"json","dimension_context":"string","entity_type":"enum","is_required":"0","ontology_id":"number","object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/propertiesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"get":{"description":"Returns a list of properties records","summary":"List properties","tags":["properties"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `object_types`, `ontologies`","type":"array","items":{"type":"string"}},"page":{"type":"string","description":"Used for pagination, pass the page result from a previous request"},"limit":{"type":"number","description":"The number of records to return"},"offset":{"type":"number","description":"The number of records to skip"},"sort":{"description":"The fields to sort by, expects a comma separated list of fields. Format is sort=`{column}.{direction},column.{direction}`","type":"string"},"id":{"description":"Filter by id, options are: `id=1`, `id[gt]=1`, `id[lt]=1`, `id[gte]=1`, `id[lte]=1`, `id[not_like]=value`, `id[not_in]=value`, `id[null]`, `id[not_null]`","type":"number"},"name":{"description":"Filter by name, options are: `name=value`, `name[search]=value`, `name[like]=value`,  `name[in]=value`, `name[null]`, `name[not_null]`","type":"string"},"description":{"description":"Filter by description, options are: `description=value`, `description[search]=value`, `description[like]=value`,  `description[in]=value`, `description[null]`, `description[not_null]`","type":"string"},"data_type":{"description":"Filter by data_type, options are: `data_type=value`, `data_type[null]`, `data_type[not_null].`, `data_type[not_like]=value`, `data_type[not_in]=value`Enums are: `string`, `number`, `boolean`, `date`, `timestamp`.","type":"enum"},"dimension_type":{"description":"Filter by dimension_type, options are: `dimension_type=value`, `dimension_type[null]`, `dimension_type[not_null].`, `dimension_type[not_like]=value`, `dimension_type[not_in]=value`Enums are: `time`, `categorical`.","type":"enum"},"dimension_type_params":{"description":"Filter by dimension_type_params, options are: ","type":"json"},"dimension_context":{"description":"Filter by dimension_context, options are: `dimension_context=value`, `dimension_context[search]=value`, `dimension_context[like]=value`,  `dimension_context[in]=value`, `dimension_context[null]`, `dimension_context[not_null]`","type":"string"},"entity_type":{"description":"Filter by entity_type, options are: `entity_type=value`, `entity_type[null]`, `entity_type[not_null].`, `entity_type[not_like]=value`, `entity_type[not_in]=value`Enums are: `primary`, `foreign`, `unique`, `natural`.","type":"enum"},"is_required":{"description":"Filter by is_required, options are: `is_required=1`, `is_required[gt]=1`, `is_required[lt]=1`, `is_required[gte]=1`, `is_required[lte]=1`, `is_required[not_like]=value`, `is_required[not_in]=value`, `is_required[null]`, `is_required[not_null]`","type":"number"},"ontology_id":{"description":"Filter by ontology_id, options are: `ontology_id=1`, `ontology_id[gt]=1`, `ontology_id[lt]=1`, `ontology_id[gte]=1`, `ontology_id[lte]=1`, `ontology_id[not_like]=value`, `ontology_id[not_in]=value`, `ontology_id[null]`, `ontology_id[not_null]`","type":"number"},"object_type_id":{"description":"Filter by object_type_id, options are: `object_type_id=1`, `object_type_id[gt]=1`, `object_type_id[lt]=1`, `object_type_id[gte]=1`, `object_type_id[lte]=1`, `object_type_id[not_like]=value`, `object_type_id[not_in]=value`, `object_type_id[null]`, `object_type_id[not_null]`","type":"number"}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"limit":20,"offset":0,"total":70,"pagination":{"total":20,"page":{"current":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","prev":null,"next":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MjB9","first":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","last":"eyJsaW1pdCI6MjAsIm9mZnNldCI6NTB9"}},"data":[{"id":"number","name":"string","description":"string","data_type":"enum","dimension_type":"enum","dimension_type_params":"json","dimension_context":"string","entity_type":"enum","is_required":"0","ontology_id":"number","object_type_id":"number"}]}}},"schema":{"$ref":"#/components/schemas/ListpropertiesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/properties/:id":{"get":{"description":"Returns a record of properties","summary":"Get properties","tags":["properties"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `object_types`, `ontologies`","type":"array","items":{"type":"string"}}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","description":"string","data_type":"enum","dimension_type":"enum","dimension_type_params":"json","dimension_context":"string","entity_type":"enum","is_required":"0","ontology_id":"number","object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/propertiesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"put":{"description":"Updates a properties record","summary":"Update properties","tags":["properties"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"data_type":{"type":"One of: string, number, boolean, date, timestamp"},"dimension_type":{"type":"One of: time, categorical"},"dimension_type_params":{"type":"json"},"dimension_context":{"type":"string"},"entity_type":{"type":"One of: primary, foreign, unique, natural"},"is_required":{"type":"0"},"ontology_id":{"type":"number"},"object_type_id":{"type":"number"}},"required":[]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","name":"string","description":"string","data_type":"enum","dimension_type":"enum","dimension_type_params":"json","dimension_context":"string","entity_type":"enum","is_required":"0","ontology_id":"number","object_type_id":"number"}}},"schema":{"$ref":"#/components/schemas/propertiesResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"delete":{"description":"Deletes a record of properties","summary":"Delete properties","tags":["properties"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"deleted":1}}},"schema":{"$ref":"#/components/schemas/propertiesDeleteResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/properties/schema":{"get":{"description":"Returns the table schema for properties","summary":"Schema","tags":["properties"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"table":"properties","columns":[{"field":"id","type":"number","nullable":false,"required":true,"primary_key":true,"unique_key":false,"foreign_key":false,"default":null,"extra":"auto_increment"},{"field":"name","type":"string","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"description","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"data_type","type":"enum","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":"","enums":["string","number","boolean","date","timestamp"]},{"field":"dimension_type","type":"enum","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":"","enums":["time","categorical"]},{"field":"dimension_type_params","type":"json","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"dimension_context","type":"string","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":""},{"field":"entity_type","type":"enum","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":false,"default":null,"extra":"","enums":["primary","foreign","unique","natural"]},{"field":"is_required","type":"number","nullable":false,"required":true,"primary_key":false,"unique_key":false,"foreign_key":false,"default":"0","extra":""},{"field":"ontology_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""},{"field":"object_type_id","type":"number","nullable":true,"required":false,"primary_key":false,"unique_key":false,"foreign_key":true,"default":null,"extra":""}],"primary_key":"id","relations":[{"table":"object_types","column":"id","org_table":"properties","org_column":"object_type_id"},{"table":"ontologies","column":"id","org_table":"properties","org_column":"ontology_id"}]}}},"schema":{"$ref":"#/components/schemas/SchemaResponse"}}},"description":"Success"},"401":{"description":"Unauthorized"}}}},"/webhook/":{"post":{"description":"Creates a new webhook","summary":"Create webhook","tags":["Webhooks"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"One of: GET, POST, PUT, PATCH, DELETE"},"url":{"type":"string"},"table":{"type":"string"},"user_identifier":{"type":"string"},"on_create":{"type":"1"},"on_update":{"type":"1"},"on_delete":{"type":"1"},"deletedAt":{"type":"string"}},"required":["id","type","url","table"]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","type":"enum","url":"string","table":"string","user_identifier":"string","on_create":"1","on_update":"1","on_delete":"1","deletedAt":"string"}}},"schema":{"$ref":"#/components/schemas/webhookResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"get":{"description":"Returns a list of webhooks records","summary":"List webhooks","tags":["Webhooks"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `_llana_webhook_log`","type":"array","items":{"type":"string"}},"page":{"type":"string","description":"Used for pagination, pass the page result from a previous request"},"limit":{"type":"number","description":"The number of records to return"},"offset":{"type":"number","description":"The number of records to skip"},"sort":{"description":"The fields to sort by, expects a comma separated list of fields. Format is sort=`{column}.{direction},column.{direction}`","type":"string"},"id":{"description":"Filter by id, options are: `id=1`, `id[gt]=1`, `id[lt]=1`, `id[gte]=1`, `id[lte]=1`, `id[not_like]=value`, `id[not_in]=value`, `id[null]`, `id[not_null]`","type":"number"},"type":{"description":"Filter by type, options are: `type=value`, `type[null]`, `type[not_null].`, `type[not_like]=value`, `type[not_in]=value`Enums are: `GET`, `POST`, `PUT`, `PATCH`, `DELETE`.","type":"enum"},"url":{"description":"Filter by url, options are: `url=value`, `url[search]=value`, `url[like]=value`,  `url[in]=value`, `url[null]`, `url[not_null]`","type":"string"},"table":{"description":"Filter by table, options are: `table=value`, `table[search]=value`, `table[like]=value`,  `table[in]=value`, `table[null]`, `table[not_null]`","type":"string"},"user_identifier":{"description":"Filter by user_identifier, options are: `user_identifier=value`, `user_identifier[search]=value`, `user_identifier[like]=value`,  `user_identifier[in]=value`, `user_identifier[null]`, `user_identifier[not_null]`","type":"string"},"on_create":{"description":"Filter by on_create, options are: `on_create=1`, `on_create[gt]=1`, `on_create[lt]=1`, `on_create[gte]=1`, `on_create[lte]=1`, `on_create[not_like]=value`, `on_create[not_in]=value`, `on_create[null]`, `on_create[not_null]`","type":"number"},"on_update":{"description":"Filter by on_update, options are: `on_update=1`, `on_update[gt]=1`, `on_update[lt]=1`, `on_update[gte]=1`, `on_update[lte]=1`, `on_update[not_like]=value`, `on_update[not_in]=value`, `on_update[null]`, `on_update[not_null]`","type":"number"},"on_delete":{"description":"Filter by on_delete, options are: `on_delete=1`, `on_delete[gt]=1`, `on_delete[lt]=1`, `on_delete[gte]=1`, `on_delete[lte]=1`, `on_delete[not_like]=value`, `on_delete[not_in]=value`, `on_delete[null]`, `on_delete[not_null]`","type":"number"},"deletedAt":{"description":"Filter by deletedAt, options are: `deletedAt=value`, `deletedAt[search]=value`, `deletedAt[like]=value`,  `deletedAt[in]=value`, `deletedAt[null]`, `deletedAt[not_null]`","type":"string"}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"limit":20,"offset":0,"total":70,"pagination":{"total":20,"page":{"current":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","prev":null,"next":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MjB9","first":"eyJsaW1pdCI6MjAsIm9mZnNldCI6MH0=","last":"eyJsaW1pdCI6MjAsIm9mZnNldCI6NTB9"}},"data":[{"id":"number","type":"enum","url":"string","table":"string","user_identifier":"string","on_create":"1","on_update":"1","on_delete":"1","deletedAt":"string"}]}}},"schema":{"$ref":"#/components/schemas/ListwebhookResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}},"/webhook/:id":{"get":{"description":"Returns a record of webhook","summary":"Get webhook","tags":["Webhooks"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"description":"The fields to return, you can pass `table.field` to get a specific field in a related table. Default is all fields in the table.","type":"array","items":{"type":"string"}},"relations":{"description":"One or more relations to include in the response. One of the following: `_llana_webhook_log`","type":"array","items":{"type":"string"}}}}}},"required":false},"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","type":"enum","url":"string","table":"string","user_identifier":"string","on_create":"1","on_update":"1","on_delete":"1","deletedAt":"string"}}},"schema":{"$ref":"#/components/schemas/webhookResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"put":{"description":"Updates a webhook record","summary":"Update webhook","tags":["Webhooks"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"One of: GET, POST, PUT, PATCH, DELETE"},"url":{"type":"string"},"table":{"type":"string"},"user_identifier":{"type":"string"},"on_create":{"type":"1"},"on_update":{"type":"1"},"on_delete":{"type":"1"},"deletedAt":{"type":"string"}},"required":[]}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"response":{"value":{"id":"number","type":"enum","url":"string","table":"string","user_identifier":"string","on_create":"1","on_update":"1","on_delete":"1","deletedAt":"string"}}},"schema":{"$ref":"#/components/schemas/webhookResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}},"delete":{"description":"Deletes a record of webhook","summary":"Delete webhook","tags":["Webhooks"],"security":[{"bearerAuth":[],"apiKeyAuth":[]}],"responses":{"200":{"content":{"application/json":{"examples":{"response":{"value":{"deleted":1}}},"schema":{"$ref":"#/components/schemas/webhookDeleteResponse"}}},"description":"Success"},"400":{"description":"Invalid Request"},"401":{"description":"Unauthorized"}}}}},"components":{"schemas":{"AuthenticationTokenResponse":{"type":"object","properties":{"access_token":{"type":"string"},"id":{"type":"string"}}}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"},"apiKeyAuth":{"name":"x-api-key","type":"apiKey","in":"header"}}},"tags":[{"name":"Authentication","description":"Endpoints for user authentication"}]}